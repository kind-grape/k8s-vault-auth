apiVersion: v1
data:
  config-init.hcl: |
    exit_after_auth = true
    pid_file = "/home/vault/pidfile"

    auto_auth {
        method "kubernetes" {
            mount_path = "auth/kubernetes"
            config = {
                role = "osjv"
                #token_path = "{path/to/jwt}"
            }
        }

        sink "file" {
            config = {
                path = "/home/vault/.token"
            }
        }
    }

    vault {
      address = http:{{ ip_here }}/{{ port }}"
      #ca_cert = "/vault/tls/ca.crt"
      tls_skip_verify = "true"
      renew_token = true
      vault_agent_token_file = "/home/vault/.token"
      retry {
        backoff = "1s"
      }
    }

    template {
      destination = "/vault/secrets/config.env"
      contents = <<EOH
    {{- with secret "services/data/dev/osjv" }}
    inbound.jv.wss.passwords={{ index .Data.data "inbound.jv.wss.passwords"}}
    inbound.jv.wss.usernames={{ index .Data.data "inbound.jv.wss.usernames"}}
    inbound.jvbatch.ftp.password={{ index .Data.data "inbound.jvbatch.ftp.password"}}
    inbound.jvbatch.ftp.username={{ index .Data.data "inbound.jvbatch.ftp.username"}}
    inbound.jveo.wss.usernames={{ index  .Data.data "inbound.jveo.wss.usernames"}}
    inbound_jveo_wss_passwords={{ .Data.data.inbound_jveo_wss_passwords}}
    weblogic.password={{ index .Data.data "weblogic.password"}}
    weblogic.username={{ index .Data.data "weblogic.username"}}
    {{end}}
    {- with secret "services/data/common" }}
    default_non_prod_secret={{.Data.data.default_non_prod_secret}}
    EOH
    }

  config.hcl: |
    exit_after_auth = false
    pid_file = "/home/vault/pidfile"

    auto_auth {
        method "kubernetes" {
            mount_path = "auth/kubernetes"
            config = {
                role = "osjv"
            }
        }

        sink "file" {
            config = {
                path = "/home/vault/.token"
            }
        }
    }

    vault {
      address = http:{{ ip_here }}/{{ port }}"
      #ca_cert = "/vault/tls/ca.crt"
      tls_skip_verify = "true"
      renew_token = true
      vault_agent_token_file = "/home/vault/.token"
      retry {
        backoff = "1s"
      }
    }

    template {
      destination = "/vault/secrets/config.env"
      contents = <<EOH
    {{- with secret "services/data/dev/osjv" }}
    inbound.jv.wss.passwords={{.Data.data.inbound.jv.wss.passwords}}
    inbound.jv.wss.usernames={{.Data.data.inbound.jv.wss.usernames}}
    inbound.jvbatch.ftp.password={{.Data.data.inbound.jvbatch.ftp.password}}
    inbound.jvbatch.ftp.username={{.Data.data.inbound.jvbatch.ftp.username}}
    inbound.jveo.wss.usernames={{.Data.data.inbound.jveo.wss.usernames}}
    inbound_jveo_wss_passwords={{.Data.data.inbound_jveo_wss_passwords}}
    weblogic.password={{.Data.data.weblogic.password}}
    weblogic.username={{.Data.data.weblogic.username}}
    {{end}}
    {- with secret "services/data/common" }}
    default_non_prod_secret={{.Data.data.default_non_prod_secret}}
    EOH
    }
kind: ConfigMap
metadata:
  name: vault-init-config
  namespace: tev-dev
